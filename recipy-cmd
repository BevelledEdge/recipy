#!/usr/local/bin/python
"""recipy - a frictionless provenance tool for Python

Usage:
  recipy-cmd [options] <outputfile>
  recipy-cmd (-h | --help)
  recipy-cmd --version

Options:
  -h --help     Show this screen
  --version     Show version
  -a --all      Show all results (otherwise just latest result given)
  -v --verbose  Be verbose
  -d --diff     Show diff
  --debug       Turn on debugging mode

"""
import os
from docopt import docopt
from pymongo import MongoClient
import sys
from pprint import pprint
from jinja2 import Template



def print_result(r):
    template = """Created by {{ author }} on {{ date }}
Ran {{ script }} using {{ command }}
{% if gitcommit is defined %}
Git: commit {{ gitcommit }}, in repo {{ gitrepo }}, with origin {{ gitorigin }}
{% endif %}
Environment: {{ environment|join(", ") }}
{% if inputs|length == 0 %}
Inputs: none
{% else %}
Inputs:
{% for input in inputs %}
  {{ input }}
{% endfor %}
{% endif %}

Outputs:
{% for output in outputs %}
  {{ output }}
{% endfor %}"""
    template = Template(template, trim_blocks=True)
    print template.render(**r)

if __name__ == '__main__':
    args = docopt(__doc__, version='recipy-cmd v0.1')

    if args['--debug']:
        print(args)

    filename = args['<outputfile>']

    client = MongoClient()

    db = client.recipyDB

    #Create images collection
    recipies = db.recipies

    results = recipies.find({'outputs':os.path.abspath(filename)}, sort=[('date', -1)])

    if results.count() == 0:
        print "No results found"
    else:
        if args['--all']:
            for r in results:
                print_result(r)
                print "-"*40
        else:
            print_result(results[0])
            if results.count() > 1:
                print "** Previous runs creating this output have been found. Run with --all to show. **"

            if args['--diff']:
                print "\n\n"
                print results[0]['diff']
